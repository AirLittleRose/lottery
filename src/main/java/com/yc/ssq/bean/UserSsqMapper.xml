<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yc.ssq.bean.UserSsqMapper">

<!-- 加入带日志的 ehcache 缓存 -->
<cache type="org.mybatis.caches.ehcache.LoggingEhcache"></cache>

	<!-- 添加用户投注信息 -->
	<insert id="addUserSsq" parameterType="UserSsq" keyProperty="usid" useGeneratedKeys="true">
		insert into userSsq(userid,orderid,ordertime,ssq_issue) values( #{userid},#{orderid}, now(),#{ssq_issue} )
	</insert>

	<select id="findSsqIssue" resultType="UserSsq" parameterType="java.lang.Integer">
		select distinct ssq_issue from userSsq where userid=#{userid} order by ssq_issue desc	
	</select>
	
	<update id="updateStatus" parameterType="java.lang.String">
		update userSsq set status = 1 where ssq_issue=#{ssq_issue}
	</update>
	
	<select id="findAfterBuy" parameterType="UserSsq" resultType="BetSsq">
		select usid,ssq.userid as userid,username,orderid,ordertime,ssq_issue,redball,blueball,sigprice,multinum 
			from
			(
			select a.usid as usid,userid,orderid,ordertime,ssq_issue,redball,blueball,sigprice,multinum from
				(select usid,userid,orderid,ordertime,ssq_issue from userSsq where usid=#{usid}) a
				inner join
				(select usid,redball,blueball,sigprice,multinum from betSsq) b
				on a.usid = b.usid
			) ssq
			inner join
			(select userid,username from users) u
			on ssq.userid = u.userid
	</select>

</mapper>