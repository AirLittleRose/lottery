<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--   namespace:命名空间 -->
<mapper namespace="com.yc.ssq.bean.AwardInfoMapper">

<!-- 加入带日志的 ehcache 缓存 -->
<cache type="org.mybatis.caches.ehcache.LoggingEhcache"></cache>
	
	<!-- 排序条件的拼接 -->
	<sql id="orderSql">
		<if test="orderby!=null and orderby!=''">
			order by #{orderby}		
			<if test="orderway!=null and orderway!=''">
				#{orderway}
			</if>
		</if>
	</sql>
	
	<!-- 分页条件的拼接 -->
	<sql id="pageSql">
		<if test="start!=null">
			limit #{start},#{pagesize}
		</if>
	</sql>
	
	<!-- 批量添加 -->
	<insert id="addAwardInfo" parameterType="AwardInfo">
		insert into awardInfo(usid,redball,blueball,grade,award) values
			<foreach collection="list" open="" close="" separator="," item="item">
			(#{item.usid},#{item.redball},#{item.blueball},#{item.grade},
			#{item.award} )
		</foreach>
	</insert>	
	
	<select id="findAwardInfo" parameterType="AwardInfo" resultType="AwardInfo">
		select distinct ai.usid as usid,userid,ssq_issue,orderid,ordertime,redball,blueball,
				multinum,status,grade,award
		from
		(select usid,redball,blueball,grade,award from awardInfo ) ai
		inner join
		(select a.usid as usid,userid,orderid,ordertime,ssq_issue,status,multinum
			from
			(select usid,userid,orderid,ordertime,ssq_issue,status from userSsq where status=#{status}) a
			inner join 
			(select usid,multinum from betSsq) b
			on a.usid=b.usid
		) ssq
		on ssq.usid = ai.usid
		where userid=#{userid}
		order by ssq_issue desc,grade asc
		<include refid="pageSql"/>
	</select>
	
	<select id="findAwardInfoCount" parameterType="AwardInfo" resultType="AwardInfo">
	select distinct ai.usid as usid,userid,ssq_issue,orderid,ordertime,redball,blueball,
				multinum,status,grade,award,count(distinct(redball)) as awardInfocount
		from
		(select usid,redball,blueball,grade,award from awardInfo ) ai
		inner join
		(select a.usid as usid,userid,orderid,ordertime,ssq_issue,status,multinum
			from
			(select usid,userid,orderid,ordertime,ssq_issue,status from userSsq where status=#{status}) a
			inner join 
			(select usid,multinum from betSsq) b
			on a.usid=b.usid
		) ssq
		on ssq.usid = ai.usid
		where userid=#{userid}
	
	</select>
	
</mapper>
